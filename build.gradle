plugins {
    id 'java'
    id 'maven-publish'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("com.gradleup.shadow") version "9.0.0-beta17"
}

group = property("group")
version = property("version")

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:${property("paperVersion")}-R0.1-SNAPSHOT")
    implementation("io.github.R2turnTrue:chzzk4j:0.1.1") // chzzk4j
}

def targetJavaVersion = 21

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks {
    runServer {
        minecraftVersion("1.21")
    }

    processResources {
        def props = [version: version]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }

    jar {
        enabled = false
    }

    shadowJar {
        archiveClassifier.set('')
        relocate 'xyz.r2turntrue.chzzk4j', 'io.github.kdy05.chzzkMc.shaded.chzzk4j'
        minimize()

        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        from('LICENSE') {
            into 'META-INF'
        }
        from('chzzk4j-LICENSE.txt') {
            into 'META-INF/licenses'
        }
    }

    build {
        dependsOn shadowJar
    }
}

publishing {
    publications {
        create('maven', MavenPublication) {
            artifact tasks.shadowJar
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}